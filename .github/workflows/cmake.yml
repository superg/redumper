name: CMake

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  check:
    runs-on: ubuntu-24.04
    permissions:
      contents: read
    outputs:
      build_number: ${{ steps.get-build-number.outputs.build_number }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: clang-format Check
        shell: bash
        run: find . -iname '*.hh' -o -iname '*.cc' -o -iname '*.ixx' | xargs clang-format-18 --dry-run -Werror
        
      - name: Get Build Number
        id: get-build-number
        shell: bash
        run: |
          NEXT_BUILD=$(gh release list --json name,isLatest --jq '.[] | select(.isLatest)|.name | ltrimstr("b") | tonumber + 1 | "b" + tostring')
          NEXT_BUILD=${NEXT_BUILD:-"b1"}
          echo "build_number=$NEXT_BUILD" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
  build-windows:
    needs: check
    strategy:
      matrix:
        include:
          - arch: x86
            platform: Win32
          - arch: x64
            platform: x64
          - arch: arm64
            platform: ARM64
    runs-on: windows-2022
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: CMake Configure
      run: cmake -B ${{github.workspace}}/BUILD -G "Visual Studio 17 2022" -A ${{matrix.platform}} -DCMAKE_BUILD_TYPE=Release -DREDUMPER_VERSION_BUILD=${{needs.check.outputs.build_number}} -DREDUMPER_OS=windows -DREDUMPER_ARCH=${{matrix.arch}}
    - name: CMake Build
      run: cmake --build ${{github.workspace}}/BUILD --config Release
    - name: CTest
      if: ${{ matrix.arch != 'arm64' }}
      working-directory: ${{github.workspace}}/BUILD
      run: ctest -C Release
    - name: CPack
      working-directory: ${{github.workspace}}/BUILD
      run: cpack -G ZIP --config CPackConfig.cmake
    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: windows_${{matrix.arch}}
        path: ${{github.workspace}}/BUILD/redumper-*.zip

  build-linux:
    needs: check
    strategy:
      matrix:
        include:
          - arch: x86
            os: ubuntu-24.04
          - arch: x64
            os: ubuntu-24.04
          - arch: arm64
            os: ubuntu-24.04-arm
    runs-on: ${{matrix.os}}
    steps:
    - name: Customize Software
      if: ${{ matrix.arch == 'x86' }}
      run: |
        sudo dpkg --add-architecture i386
        sudo apt-get update
        sudo apt-get install clang-18 lld-18 clang-tools-18 clang-format-18 ninja-build libc6-dev-i386 libstdc++-13-dev:i386 libc++-18-dev:i386
    - name: Customize Software
      if: ${{ matrix.arch != 'x86' }}
      run: sudo apt-get install clang-18 lld-18 clang-tools-18 clang-format-18 libc++-18-dev ninja-build
    - name: Checkout
      uses: actions/checkout@v4
    - name: CMake Configure
      if: ${{ matrix.arch == 'x86' }}
      run: CXX=clang++-18 CXXFLAGS="-target i686-linux-gnu" cmake -B ${{github.workspace}}/BUILD -G "Ninja" -DCMAKE_BUILD_WITH_INSTALL_RPATH=ON -DREDUMPER_CLANG_LINK_OPTIONS="-static" -DCMAKE_BUILD_TYPE=Release -DREDUMPER_VERSION_BUILD=${{needs.check.outputs.build_number}} -DREDUMPER_OS=linux -DREDUMPER_ARCH=${{matrix.arch}}
    - name: CMake Configure
      if: ${{ matrix.arch != 'x86' }}
      run: CXX=clang++-18 cmake -B ${{github.workspace}}/BUILD -G "Ninja" -DCMAKE_BUILD_WITH_INSTALL_RPATH=ON -DREDUMPER_CLANG_LINK_OPTIONS="-static" -DCMAKE_BUILD_TYPE=Release -DREDUMPER_VERSION_BUILD=${{needs.check.outputs.build_number}} -DREDUMPER_OS=linux -DREDUMPER_ARCH=${{matrix.arch}}
    - name: CMake Build
      run: cmake --build ${{github.workspace}}/BUILD --config Release
    - name: CTest
      if: ${{ matrix.arch != 'arm64' }}
      working-directory: ${{github.workspace}}/BUILD
      run: ctest -C Release
    - name: CPack
      working-directory: ${{github.workspace}}/BUILD
      run: cpack -G ZIP --config CPackConfig.cmake
    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: linux_${{matrix.arch}}
        path: ${{github.workspace}}/BUILD/redumper-*.zip
        
  build-macos:
    needs: check
    strategy:
      matrix:
        arch: [x64, arm64]
    runs-on: macos-14
    steps:
    - name: Customize Software
      if: ${{ matrix.arch == 'x64' }}
      run: |
        arch -x86_64 /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
        arch -x86_64 /usr/local/bin/brew install llvm@18
    - name: Customize Software
      if: ${{ matrix.arch == 'arm64' }}
      run: brew install llvm@18
    - name: Checkout
      uses: actions/checkout@v4
    - name: CMake Configure
      if: ${{ matrix.arch == 'x64' }}
      run: CXX=$(arch -x86_64 /usr/local/bin/brew --prefix llvm@18)/bin/clang++ cmake -B ${{github.workspace}}/BUILD -G "Ninja" -DREDUMPER_CLANG_USE_LIBCPP=ON -DREDUMPER_CLANG_LINK_OPTIONS="-L$(arch -x86_64 /usr/local/bin/brew --prefix llvm@18)/lib/c++" -DCMAKE_BUILD_TYPE=Release -DREDUMPER_VERSION_BUILD=${{needs.check.outputs.build_number}} -DCMAKE_OSX_ARCHITECTURES=x86_64 -DREDUMPER_OS=macos -DREDUMPER_ARCH=x64
    - name: CMake Configure
      if: ${{ matrix.arch == 'arm64' }}
      run: CXX=$(brew --prefix llvm@18)/bin/clang++ cmake -B ${{github.workspace}}/BUILD -G "Ninja" -DREDUMPER_CLANG_USE_LIBCPP=ON -DREDUMPER_CLANG_LINK_OPTIONS="-L$(brew --prefix llvm@18)/lib/c++" -DCMAKE_BUILD_TYPE=Release -DREDUMPER_VERSION_BUILD=${{needs.check.outputs.build_number}} -DCMAKE_OSX_ARCHITECTURES=arm64 -DREDUMPER_OS=macos -DREDUMPER_ARCH=arm64
    - name: CMake Build
      run: cmake --build ${{github.workspace}}/BUILD --config Release
    - name: CTest
      working-directory: ${{github.workspace}}/BUILD
      run: ctest -C Release
    - name: CPack
      working-directory: ${{github.workspace}}/BUILD
      run: cpack -G ZIP --config CPackConfig.cmake
    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: macos_${{matrix.arch}}
        path: ${{github.workspace}}/BUILD/redumper-*.zip

  release:
    if: github.event_name != 'pull_request'
    needs: [check, build-windows, build-linux, build-macos]
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true
      - name: 'Create Release'
        shell: bash
        run: |
          shopt -s nullglob
          files=(redumper-*.zip)
          if [ ${#files[@]} -eq 0 ]; then
            echo "No artifacts to release"; exit 1
          fi
          gh release create --generate-notes "${{needs.check.outputs.build_number}}" "${files[@]}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
